XCOMM $XFree86: xc/lib/GL/mesa/src/drv/gamma/Imakefile,v 1.25 2002/02/23 00:45:49 dawes Exp $

#include <Threads.tmpl>

#if GlxUseBuiltInDRIDriver
#define DoNormalLib (NormalLibGlx || SharedLibGlxWithoutPIC)
#define DoSharedLib (SharedLibGlx && !SharedLibGlxWithoutPIC)
#define DoExtraLib SharedLibGlx
#define DoDebugLib DebugLibGlx
#define DoProfileLib ProfileLibGlx
#else
#define DoNormalLib SharedLibGlxWithoutPIC
#define DoSharedLib !SharedLibGlxWithoutPIC
#define DoExtrasLib NO
#define DoDebugLib NO
#define DoProfileLib NO
#endif

#define MesaDrvCommonBuildDir ../common/
#include "../common/Imakefile.inc"
#include "../../../array_cache/Imakefile.inc"
#include "../../../main/Imakefile.inc"
#include "../../../math/Imakefile.inc"
#include "../../../shader/Imakefile.inc"
#include "../../../shader/grammar/Imakefile.inc"
#include "../../../shader/slang/Imakefile.inc"
#include "../../../shader/slang/library/Imakefile.inc"
#include "../../../swrast/Imakefile.inc"
#include "../../../swrast_setup/Imakefile.inc"
#include "../../../tnl/Imakefile.inc"
#include "../../../tnl_dd/Imakefile.inc"
#include "../../../Imakefile.inc"
#if defined(i386Architecture) && MesaUseX86Asm
#include "../../../x86/Imakefile.inc"
#endif
#ifdef SparcArchitecture
#include "../../../sparc/Imakefile.inc"
#endif
#define NeedToLinkMesaSrc
#include "Imakefile.inc"


      DEFINES = $(ALLOC_DEFINES) $(DRI_DEFINES) $(MESA_ASM_DEFINES)
     INCLUDES = $(X_INCLUDES) $(MESA_INCLUDES) $(DRI_INCLUDES)

      DRMOBJS = $(GLXLIBSRC)/dri/drm/xf86drm.o \
		$(GLXLIBSRC)/dri/drm/xf86drmHash.o \
		$(GLXLIBSRC)/dri/drm/xf86drmRandom.o \
		$(GLXLIBSRC)/dri/drm/xf86drmSL.o

         SRCS = $(GAMMASRCS)
         OBJS = $(DRMOBJS) $(COREMESAOBJS) \
		$(MESA_ASM_OBJS) $(COMMONOBJS) $(GAMMAOBJS) 

REQUIREDLIBS = MathLibrary $(LDPRELIB) $(GLXLIB) $(XONLYLIB) $(EXPATLIB)

#include <Library.tmpl>

LibraryObjectRule()

SubdirLibraryRule($(GAMMAOBJS))
NormalLintTarget($(SRCS))

#if !GlxUseBuiltInDRIDriver
LIBNAME = gamma_dri.so
SharedDriModuleTarget($(LIBNAME),DONE $(OBJS),$(OBJS))
InstallDynamicModule($(LIBNAME),$(MODULEDIR),dri)

#ifdef GlxSoProf
SOPROF_LIBNAME = _gamma_dri_p
NormalDepLibraryTarget($(SOPROF_LIBNAME),DONE $(OBJS),$(OBJS))
InstallLibrary($(SOPROF_LIBNAME),$(MODULEDIR)/dri)
#endif
#endif

DependTarget()

